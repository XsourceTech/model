name: 'ðŸš€ Build and Push to ACR'
on:
  workflow_dispatch:
  push:
    branches:
      - feat/ci-cd

jobs:
  build-and-push:
    name: Build Docker Image and Push to ACR
    runs-on: ubuntu-latest
    environment: Integration

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Azure
        run: |
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }} --output none
          az account set --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }} 

      - name: Build and Push Docker Image to ACR
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/model_web:${{ secrets.IMAGE_TAG }} 
          file: Dockerfile 
          # build-args: |
          #   ENVIRONMENT=${{ secrets.DEPLOY_ENVIRONMENT }}

  deploy-to-azure:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: Integration

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Azure
        run: |
          az login --service-principal -u ${{ secrets.ARM_CLIENT_ID }} -p ${{ secrets.ARM_CLIENT_SECRET }} --tenant ${{ secrets.ARM_TENANT_ID }} --output none
          az account set --subscription ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_NAME }} 

      - name: Azure Web App Deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.WEB_APP_NAME }}
          images: ${{ secrets.ACR_LOGIN_SERVER }}/model_web:${{ secrets.IMAGE_TAG }}
